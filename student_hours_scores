#predict the students' score given they studied for 9.25 hours.
#importing the required packages in the notebook
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline 
from sklearn import metrics
data = pd.read_csv("http://bit.ly/w-data")
data.head(5)
data.plot(x='Hours',y='Scores',style='o', marker='*')
plt.xlabel('Hours')
plt.ylabel('Scores')
plt.show()
#saving data into X as features and y as results 
X= data.drop(['Scores'],axis=1)
y=data['Scores']

print(X.head(5))
print(y.head(5))
#splitting the dataset into train and test 
X_train, X_test, y_train, y_test= train_test_split(X,y, test_size=0.2, random_state=0)
model = LinearRegression()
model.fit(X_train,y_train)
#accuracy calculation
testing_score = model.score(X_test, y_test)
training_score = model.score(X_train, y_train)
print("Results")
print("testing score: ", testing_score)
print("training score: ", training_score)
line=model.coef_*X+model.intercept_
 plt.scatter(X,y,marker="*")
 plt.plot(X,line);
 plt.show()
 #comparing the actuat test result with the predicted result
y_pred = model.predict(X_test)
df= pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
df
#What will be the score of a student studying 9.25 hours?
print("The student studying for 9.25 hours will get score =",model.predict([[9.25]]))
